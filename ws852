#!/usr/bin/env python3

assert __name__=='__main__'

import os
import sys
import datetime
from pathlib import Path

METAVAR_ROOT = 'WS852_DEVICE_ROOT'


def get_folders_or_die():
    root = os.environ.get(METAVAR_ROOT)
    root = root and Path(root)
    if not root:
        exit( 'environment variable "${%s}" is not set' % METAVAR_ROOT )
    if not root.is_dir():
        exit( 'no device mounted at [%s].' % root )
    folders = [root/('RECORDER/FOLDER_%s' % ch ) for ch in 'ABCDE']
    if not folders[0].is_dir():
        exit( 'folder [%s] not found.' % folders[0] )
    print( 'preconditions are met.')
    return folders


def cmd_rename():
    folders = get_folders_or_die()
    for folder in folders:
        for path in folder.iterdir():
            rename(path)


def cmd_check():
    get_folders_or_die()


def cmd_upload():
    exit( 'unimplemented.' )


def main():
    cmd = sys.argv[-1]
    if False: pass
    elif cmd == 'rename'    : cmd_rename()
    elif cmd == 'check'     : cmd_check()
    elif cmd == 'upload'    : cmd_upload()
    else: print(USAGE)


def rename( path ):
    if not is_native(path.name):
        print('skip: %s' % path)
    else:
        ts = os.path.getmtime(str(path))
        dt = datetime.datetime.fromtimestamp(ts)
        timestamp = dt.strftime('%Y%m%dT%H%M%S')
        newname = '%s.ws852.mp3' % timestamp
        newpath = path.parent/newname
        print('rename: %s -> %s' % (path,newpath))
        path.rename(newpath)


def alldigits(str):
    if not str: return True
    if not str[0] in '0123456789': return False
    return alldigits(str[1:])


def is_native(name): return (
        True
        and alldigits(name[0:6])
        and name[6]=='_'
        and alldigits(name[7:11])
        and name[11:]=='.MP3'
    )

USAGE="""
WS852 : Handle files on the Olympus WS-852 voice recorder.

USAGE:

    ws852 SUBCOMMAND

SUBCOMMANDS:

    rename      - rename all raw voicefiles in device to show timestamp
    upload      - move all renamed files to ${WS852_UPLOAD_DIR} (if well defined) [unimplemented]
    check       - check that preconditions are met.

PRECONDITIONS:

    Environment varible "${WS852_DEVICE_ROOT}" must be set to the path
    to the root folder of the mounted device.

RESTRICIONS:

    This must be called from within the script's directory by the
    relative path [./ws852.py] and this directory must be in the
    root directory of the device.

NOTES FOR 'rename' SUBCOMMAND:

    Renaming is in situ.

    Voice files created natively by the device match this pattern:
        "{ROOT}/FOLDER_{ch}/{nnnnnn}_{nnnn}.MP3"
    where
        {ROOT}   : the root folder of the device
        {ch}     : any character from 'ABCDE'
        {nnnnnn} : a six digit numeric string showing YYMMDD
        {nnnn}   : a four digit numeric string showing an incrementing serial number.

    All such files (and only such files) will be renamed to:
        "{ROOT}/FOLDER_{ch}/{timestamp}.ws852.mp3"
    where
        {timestamp} is a 'yyyymmddThhmmss' iso timestamp.

    The timestamp may reflect the time the voice recording began or the time the
    voice recording ended. There is no guarantee of which of these times will be
    used. Be careful interpreting the timestamp with very long recordings.

"""

main()
